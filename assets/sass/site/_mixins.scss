// Mixin setup
// ---------------------------
@include placeholder;

// Mixin overrides
// ---------------------------
@mixin form-shading-text(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $state            : $default-form-state,
  $shading          : $default-form-shading
) {
  // If 2 colours are passed make a gradient, otherwise a solid colour
  $background:
    if( length($background-color) > 1,
      linear-gradient(
        to bottom,
        scale-color(nth($background-color, 1), $lightness: -8%),
        nth($background-color, 1) 6px,
        nth($background-color, 2)
      ),
      $background-color
    );

  background: $background;
  box-shadow:
    inset 0 2px scale-color(nth($color, 1), $lightness: -8%),
    inset 0 0 0 2px $color,
    0 2px 2px rgba($white, .8); }

// Shading for radio
// Called in _type.scss
// ---------------------------
@mixin form-shading-checkbox(
  $color            : $default-form-color,
  $background-color : $default-form-background-color,
  $shading          : $default-form-shading
) {
  // If 2 colours are passed make a gradient, otherwise a solid colour
  $background:
    if( length($background-color) > 1,
      linear-gradient(
        to bottom,
        scale-color(nth($background-color, 1), $lightness: -10%),
        nth($background-color, 1) 4px,
        nth($background-color, 2) 100%
      ),
      $background-color
    );
  background: $background;

  box-shadow:
    inset 0 2px scale-color($color, $lightness: -15%),
    inset 0 0 0 2px $color,
    if($shading, inset 0 2px 1px $white, compact(false));

  &:checked {
    @if length($background-color) > 1 {
      background: $default-form-checkbox-image, $background; }
    @else {
      background: $default-form-checkbox-image $background; } } }


// Site specific mixins
// ---------------------------

// Sometimes itâ€˜s applied to .page-offset, sometimes to the element
@mixin page-offset {
  padding-top: $line * 2;

  @include breakpoint($c) {
    padding-top: $line * 4; } }

// Position an element absolutely
@mixin pin-below {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0; }

@mixin dashes(
  $position: bottom,
  $image: "dash-alternate.svg",
  $height: 4px
) {
  content: "";
  background-image: image-url(#{$image});
  background-repeat: repeat-x;
  background-position: -12px center;
  height: #{$height};
  position: absolute;
  left: 0;
  right: 0;
  z-index: $z-index-2;

  @if $position == top {
    bottom: calc(100% - 1px); }

  @else {
    top: calc(100% - 1px); } }

@mixin fonts($type: "sans") {

  @if $type == "sans" {
    font-family: $system;

    .fonts-stage-1 & {
      font-family: $heading; } }

  @else {
    font-family: $serif; } }
