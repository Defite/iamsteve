1375858647
{embed="include/header"}

	{if "1" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/understanding_compass_default_variables" title="Read Understanding compass default variables in full.">Understanding compass default variables</a></h1>
			<div class="latest-entry-summary">
			
				<p>Compass has a handy feature to create default variables using !default in the same way you would use !important. Why is this handy? Well you can use them to manipulate the default values of a mixin, remove or add certain bits of code based on levels of legacy or experimental support for certain bits of CSS, to name a few.</p>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2013-05-19T10:01:00+0000" class="updated" pubdate>19/05/2013</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/understanding_compass_default_variables" title="Read Understanding compass default variables in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=53">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/understanding_compass_default_variables">Understanding compass default variables</a></h2>
			<p class="entry-summary previous-entry-summary">Compass has a handy feature to create default variables using `!default` in the same way you would use `!important`. Why is this handy? Well you can use them to manipulate&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/understanding_compass_default_variables" title="Read Understanding compass default variables in full" class="button-small">Read entry</a>
		</article>
	{/if}

	{if "2" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/using_ems_for_efficiency" title="Read Using em&#8217;s for efficiency in full.">Using em&#8217;s for efficiency</a></h1>
			<div class="latest-entry-summary">
			
				<p>There are a lot of CSS frameworks out there that are great, but their biggest flaw to me is their insistence to override styles and not use a relative measurement like em&#8217;s to adjust the styles when needed. I realise a lot of the way frameworks are made are to dummy proof them and to provide as much freedom as possible with their use. I still think there is an extent to which it can be done better.</p>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2013-04-02T11:55:03+0000" class="updated" pubdate>02/04/2013</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/using_ems_for_efficiency" title="Read Using em&#8217;s for efficiency in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=52">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/using_ems_for_efficiency">Using em&#8217;s for efficiency</a></h2>
			<p class="entry-summary previous-entry-summary">There are a lot of CSS frameworks out there that are great, but their biggest flaw to me is their insistence to override styles and not use a relative measurement&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/using_ems_for_efficiency" title="Read Using em&#8217;s for efficiency in full" class="button-small">Read entry</a>
		</article>
	{/if}

	{if "3" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/create_a_fluid_browser_with_border_image" title="Read Create a fluid browser with border-image in full.">Create a fluid browser with border-image</a></h1>
			<div class="latest-entry-summary">
			
				<p>I have been curious to try find a solution to having a fluid browser around portfolio images. I have attempted to find a solution which is as simple as I have been able to find. The overall idea uses :before to apply the browser and border-image, this is purely to offset extra space caused by the widths of the border.</p>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2013-03-24T13:38:09+0000" class="updated" pubdate>24/03/2013</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/create_a_fluid_browser_with_border_image" title="Read Create a fluid browser with border-image in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=51">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/create_a_fluid_browser_with_border_image">Create a fluid browser with border-image</a></h2>
			<p class="entry-summary previous-entry-summary">I have been curious to try find a solution to having a fluid browser around portfolio images. I have attempted to find a solution which is as simple as I&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/create_a_fluid_browser_with_border_image" title="Read Create a fluid browser with border-image in full" class="button-small">Read entry</a>
		</article>
	{/if}

	{if "4" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/compass_mixins_you_should_know_about" title="Read Compass mixins you should know about in full.">Compass mixins you should know about</a></h1>
			<div class="latest-entry-summary">
			
				<p>Compass is a brilliant extension to Sass as we all know. We know the time saving CSS3 related mixins it offers, maybe you don&#8217;t know some of the lesser praised mixins/functions that offer a similar convenience. I&#8217;m going to run through a few of my favourites that I have come to rely on.</p>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2013-01-03T09:13:07+0000" class="updated" pubdate>03/01/2013</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/compass_mixins_you_should_know_about" title="Read Compass mixins you should know about in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=50">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/compass_mixins_you_should_know_about">Compass mixins you should know about</a></h2>
			<p class="entry-summary previous-entry-summary">Compass is a brilliant extension to Sass as we all know. We know the time saving CSS3 related mixins it offers, maybe you don&#8217;t know some of the lesser&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/compass_mixins_you_should_know_about" title="Read Compass mixins you should know about in full" class="button-small">Read entry</a>
		</article>
	{/if}

	{if "5" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/using_scale_color_in_sass" title="Read Using scale-color in Sass in full.">Using scale-color in Sass</a></h1>
			<div class="latest-entry-summary">
			
				<p>I have been recently trying to get a consistent look across my element mixin no matter the colour, without being too inefficient. You could say simply take a base colour, and use darken and lighten on it, to get reasonable variations of the colour, for gradient colour stops. Then throw in some bevels, a border, and you have a nice button.</p>

<p>There comes a point where you&#8217;re thinking, the bevel could be less, the shadows are too intense for this colour. How do I solve this without a lot of hassle comparing if a colour is a certain saturation, lightness and so on. Difficult right?</p>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2012-11-21T19:45:42+0000" class="updated" pubdate>21/11/2012</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/using_scale_color_in_sass" title="Read Using scale-color in Sass in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=49">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/using_scale_color_in_sass">Using scale-color in Sass</a></h2>
			<p class="entry-summary previous-entry-summary">I have been recently trying to get a consistent look across my element mixin no matter the colour, without being too inefficient. You could say simply take a base colour,&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/using_scale_color_in_sass" title="Read Using scale-color in Sass in full" class="button-small">Read entry</a>
		</article>
	{/if}

	{if "6" == "1"}
		<article role="article" class="latest-entry">
			<h1 class="entry-title latest-entry-title"><a href="http://iamsteve.dev/blog/entry/create_a_sass_button_element_mixin" title="Read Create a Sass button/element mixin in full.">Create a Sass button/element mixin</a></h1>
			<div class="latest-entry-summary">
			
				<p>This mixin is one I&#8217;ve been using for a few months now to create buttons/anything with a particular style. I call it an element mixin, as it&#8217;s not tied to anything. It started off as a plain button mixin, though I found sometimes I just want a button reset (some padding, no border, etc) or no hover/active states. This a very customisable mixin with simple parameters.</p>

<blockquote>
  <p>Note: Some things rely on compass existing, or some variables set such as $element for a font family. I&#8217;ve defined them at the top, but you&#8217;ll probably have your own. The size parameter uses this pixel to em function @function em($target-px, $context) { @return ($target-px / $context) * 1em; }.</p>
</blockquote>


			</div>
			<aside class="meta">
<ul>
	<li data-icon="calendar"><time datetime="2012-11-03T11:39:31+0000" class="updated" pubdate>03/11/2012</time></li>
	<li data-icon="tag"><a href="http://iamsteve.dev/blog/category/code" title="This post is under category:Code." rel="category tag">Code</a></li>
	<li data-icon="link"><a href="http://iamsteve.dev/blog/entry/create_a_sass_button_element_mixin" title="Read Create a Sass button/element mixin in full." rel="bookmark">Continue reading</a></li>
	{if "1" == logged_in_member_id OR logged_in_group_id == "1"}<li data-icon="write"><a href="{cp_url}?S=0&amp;D=cp&amp;C=content_publish&amp;M=entry_form&amp;channel_id=1&amp;entry_id=48">Edit</a></li>{/if}
	<li class="screenreader"><span class="author vcard"><a rel="author" href="http://iamsteve.me" class="url fn">Steve McKinney</a></span></li>
</ul>
</aside>
		</article>
	{if:else}
		<article role="article" class="previous-entry">
			<h2 class="h4 entry-title"><a href="http://iamsteve.dev/blog/entry/create_a_sass_button_element_mixin">Create a Sass button/element mixin</a></h2>
			<p class="entry-summary previous-entry-summary">This mixin is one I&#8217;ve been using for a few months now to create buttons/anything with a particular style. I call it an element mixin, as it&#8217;s&hellip;</p>
			<a href="http://iamsteve.dev/blog/entry/create_a_sass_button_element_mixin" title="Read Create a Sass button/element mixin in full" class="button-small">Read entry</a>
		</article>
	{/if}

{embed="include/footer"}